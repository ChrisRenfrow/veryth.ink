---
import { type CollectionEntry } from 'astro:content'

import FormattedDate from '@components/FormattedDate.astro'
import ProseWrapper from '@components/ProseWrapper.astro'
import Toc from '@components/Toc.astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import { getPosts } from '~/helpers/queries'
import { slugify } from '~/helpers/utils'

export async function getStaticPaths() {
  const posts: CollectionEntry<'blog'>[] = await getPosts()

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

const { post } = Astro.props
const { Content, headings } = (await post.render()) as {
  Content: any
  headings: { depth: number; slug: string; text: string }[]
}

const shallowHeadings = headings.filter((h) => h.depth <= 2)
const hasHeadings = headings.length > 0
const hasCategory = !!post.data.category
const hasTags = !!post.data.tags
---

<BaseLayout pageTitle={post.data.title}>
  <article class="pb-6">
    <header class="flex flex-col space-y-2 pb-2">
      <h1 class="text-4xl font-bold lowercase">{post.data.title}</h1>
      <div class="ml-2 flex flex-row md:flex-col">
        <time class="font-bold"
          >published <FormattedDate date={post.data.published_on} /></time
        >
        {
          hasCategory && (
            <span>
              <a
                class="underline decoration-orange-900 decoration-2 hover:bg-stone-600 hover:text-stone-200 hover:no-underline dark:text-stone-300"
                href={`/blog/categories/${post.data.category}`}
              >
                /{post.data.category}
              </a>
            </span>
          )
        }
      </div>
      <p class="text-lg text-stone-600 dark:text-stone-400">
        {post.data.description}
      </p>
      <div class="ml-auto mt-auto lowercase">by {post.data.author}</div>
    </header>
    <hr class="border-orange-700" />
  </article>
  <main>
    {
      hasHeadings && (
        <aside class="hidden md:block">
          <nav class="float-right min-w-56 pb-4 pl-8">
            <h3 class="font-bold">contents</h3>
            <hr class="border-orange-700 pb-2" />
            <Toc headings={shallowHeadings} />
          </nav>
        </aside>
      )
    }
    <ProseWrapper><Content /></ProseWrapper>
  </main>
  {
    hasTags && (
      <footer class="pt-5">
        <nav class="inline-flex flex-wrap gap-1">
          {post.data.tags &&
            post.data.tags.map((tag: string) => {
              const slugTag = slugify(tag)
              // prettier-ignore
              return (
                <span class="after:content-[','] last:after:content-none">
                <a class="text-orange-600 hover:bg-orange-600 hover:text-stone-800" href={`/blog/tags/${slugTag}`}>#{slugTag}</a></span>
              )
            })}
        </nav>
      </footer>
    )
  }
</BaseLayout>
