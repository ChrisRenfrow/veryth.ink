---
import { type CollectionEntry } from 'astro:content'

import FormattedDate from '@components/FormattedDate.astro'
import Toc from '@components/Toc.astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import { getAllPosts } from '~/helpers/queries'
import { slugify } from '~/helpers/utils'

export async function getStaticPaths() {
  const posts: CollectionEntry<'blog'>[] = await getAllPosts()

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }))
}

interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props
const { Content, headings } = await post.render()

const shallowHeadings = headings.filter((h) => h.depth <= 2)
const hasHeadings = headings.length > 0
const hasCategory = !!post.data.category
const hasTags = !!post.data.tags
---

<BaseLayout>
  <div class="flex flex-col pb-5 space-y-2">
    <h1 class="text-4xl font-bold">{post.data.title}</h1>
    {
      hasCategory && (
        <h3>
          <a
            class="underline decoration-orange-600 decoration-2"
            href={`/blog/category/${post.data.category}`}
          >
            /{post.data.category}
          </a>
        </h3>
      )
    }
    <span
      >posted on <FormattedDate date={post.data.published_on} />, by {
        post.data.author
      }</span
    >
    <p class="text-lg text-stone-600 dark:text-stone-400">
      {post.data.description}
    </p>
    <hr class="border-orange-700" />
  </div>
  <div class="flex flex-col md:flex-row">
    <div
      class:list={[
        'basis-1/4 pr-5 flex md:space-y-5 md:flex-col',
        headings.length == 0 && !post.data.tags && 'hidden',
      ]}
    >
      {
        hasHeadings && (
          <div>
            <h3 class="font-bold text-xl">Contents</h3>
            <Toc headings={shallowHeadings} />
          </div>
        )
      }
      {
        hasTags && (
          <div>
            <h3 class="font-bold text-xl">Tags</h3>
            <div class="pl-1 flex flex-wrap">
              {post.data.tags &&
                post.data.tags.map((tag: string) => (
                  <a
                    class="after:content-[','] after:dark:text-stone-300 after:text-stone-500 after:last:content-[''] text-orange-600 pr-1 after:ml-[-0.55em]"
                    href={`/blog/tag/${slugify(tag)}`}
                  >
                    #{tag}
                  </a>
                ))}
            </div>
          </div>
        )
      }
    </div>
    <div
      class="basis-3/4 pt-4 md:pt-0
        prose-sm md:prose prose-stone dark:prose-invert
        prose-h1:font-bold prose-h1:text-2xl light:prose-h1:text-stone-200
        prose-a:text-orange-600 marker:prose-ul:text-stone-600 prose-blockquote:border-stone-600
        prose-p:text-justify prose-headings:underline"
    >
      <Content />
    </div>
  </div>
</BaseLayout>
