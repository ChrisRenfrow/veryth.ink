---
import BaseLayout from '@layouts/BaseLayout.astro'
import PostList from '@components/PostList.astro'

import { type CollectionEntry } from 'astro:content'
import { getAllPosts } from '~/helpers/queries.js'
import { pluralize, slugify } from '~/helpers/utils.js'
import type { PaginateFunction } from 'astro'
import Paginate from '@components/Paginate.astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const posts: CollectionEntry<'blog'>[] = await getAllPosts()
  const categoryListings = new Map()

  posts.forEach((post) => {
    const catSlug = post.data.category
      ? slugify(post.data.category)
      : 'uncategorized'
    catSlug === 'uncategorized' && console.log(post.slug, 'is uncategorized')
    if (categoryListings.has(catSlug)) {
      categoryListings.get(catSlug).push(post)
    } else {
      categoryListings.set(catSlug, [post])
    }
  })

  return Array.from(categoryListings.entries()).flatMap((category) =>
    paginate(category[1], {
      params: { category: category[0] },
      pageSize: 8,
    }),
  )
}

const { page } = Astro.props
const { category } = Astro.params
---

<BaseLayout>
  <h1 class="text-2xl font-bold pb-5">
    categories/{category} ({page.total}
    {pluralize('post', page.total)})
  </h1>
  <hr class="border-stone-400 border-t-2 pb-5" />
  <PostList posts={page.data} />
  <Paginate {page} />
</BaseLayout>
