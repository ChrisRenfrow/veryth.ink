---
import type { CollectionEntry } from 'astro:content'
import type { PaginateFunction } from 'astro'

import BaseLayout from '@layouts/BaseLayout.astro'
import PostList from '@components/PostList.astro'
import Paginate from '@components/Paginate.astro'

import { getPosts, getTags } from '~/helpers/queries.js'
import { pluralize } from '~/helpers/utils.js'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const posts: CollectionEntry<'blog'>[] = await getPosts()
  const tags = await getTags()

  return tags.flatMap(([tagSlug, tag]) => {
    const tagPosts = posts.filter((post) => post.data.tags?.includes(tag))
    return paginate(tagPosts, {
      params: { tag: tagSlug },
      pageSize: 8,
    })
  })
}

const { page } = Astro.props
const { tag } = Astro.params
---

<BaseLayout>
  <h1 class="pb-5 text-2xl font-bold"
    ><a
      href="/blog/tags"
      class="underline decoration-orange-600 decoration-2 hover:bg-orange-600 hover:text-stone-800"
      >tags</a
    >/{tag} ({page.total}
    {pluralize('post', page.total)})</h1
  >
  <hr class="border-t-2 border-stone-400 pb-5" />
  <PostList posts={page.data} />
  <Paginate {page} />
</BaseLayout>
