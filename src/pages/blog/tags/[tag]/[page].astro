---
import BaseLayout from '@layouts/BaseLayout.astro'
import PostList from '@components/PostList.astro'

import type { CollectionEntry } from 'astro:content'
import { getAllPosts } from '~/helpers/queries.js'
import { pluralize, slugify } from '~/helpers/utils.js'
import type { PaginateFunction } from 'astro'
import Paginate from '@components/Paginate.astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const posts: CollectionEntry<'blog'>[] = await getAllPosts()
  const tagListings = new Map()

  posts.forEach((post) => {
    post.data.tags &&
      post.data.tags.forEach((tag: string) => {
        const tagSlug = slugify(tag)
        if (tagListings.has(tagSlug)) {
          tagListings.get(tagSlug).push(post)
        } else {
          tagListings.set(tagSlug, [post])
        }
      })
  })

  return Array.from(tagListings.entries()).flatMap((tagListing) =>
    paginate(tagListing[1], {
      params: { tag: tagListing[0] },
      pageSize: 8,
    }),
  )
}

const { page } = Astro.props
const { tag } = Astro.params
---

<BaseLayout>
  <h1 class="text-2xl font-bold pb-5"
    >tags/{tag} ({page.total} {pluralize('post', page.total)})</h1
  >
  <hr class="border-stone-400 border-t-2 pb-5" />
  <PostList posts={page.data} />
  <Paginate {page} />
</BaseLayout>
