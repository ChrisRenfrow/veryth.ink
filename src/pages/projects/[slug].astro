---
import type { GetStaticPaths } from 'astro'
import type { CollectionEntry } from 'astro:content'

import BaseLayout from '@layouts/BaseLayout.astro'
import FormattedDate from '@components/FormattedDate.astro'
import PostList from '@components/PostList.astro'

import { getProjects, getPosts } from '~/helpers/queries'
import ProseWrapper from '@components/ProseWrapper.astro'

export const getStaticPaths = (async () => {
  const projects = await getProjects()
  const allPosts = await getPosts()

  return projects.map((project) => {
    const relatedPosts = allPosts.filter((post) =>
      project.data.associated_tags?.some((tag: string) =>
        post.data.tags?.includes(tag),
      ),
    )
    return {
      params: { slug: project.slug },
      props: { project, posts: relatedPosts },
    }
  })
}) satisfies GetStaticPaths

function truncateUrl(url: string): string {
  return url.replace(/^(https?:\/\/)?(www\.)?/, '')
}

interface Props {
  project: CollectionEntry<'projects'>
  posts: CollectionEntry<'blog'>[]
}

const { project, posts } = Astro.props
const { Content } = await project.render()
const maxPosts = 4

const {
  name,
  description,
  homepage,
  repository,
  license,
  started_on,
  finished_on,
  status,
  contributors,
  associated_tags,
} = project.data
---

<BaseLayout>
  <article class="pb-5">
    <header class="flex flex-col space-y-2 pb-4">
      <h1 class="text-4xl font-bold lowercase">{name}</h1>
      <span class="text-xl">
        <time>
          <FormattedDate date={started_on} /> - {
            finished_on ? <FormattedDate date={finished_on} /> : 'ongoing'
          }
        </time>{' '}({status})
      </span>
      <p class="text-lg text-stone-600 dark:text-stone-400">{description}</p>
    </header>
    <hr class="border-orange-700" />
  </article>
  <main class="flex flex-col space-y-6">
    <section
      class="flex flex-col justify-between gap-4 sm:flex-row sm:justify-normal"
    >
      <ul class="sm:min-w-1/2 flex flex-col space-y-1">
        {
          [
            { label: 'homepage', value: homepage },
            { label: 'repository', value: repository },
          ].map(
            ({ label, value }) =>
              value && (
                <li class="flex flex-col overflow-hidden sm:inline-block">
                  <span class="font-bold">{label}:</span>{' '}
                  <a
                    href={value}
                    class="max-w-full truncate underline decoration-orange-600 hover:bg-orange-600 hover:text-stone-800"
                    title={value}
                  >
                    {truncateUrl(value)}
                  </a>
                </li>
              ),
          )
        }
        {
          license && (
            <li class="flex flex-col md:block">
              <span class="font-bold">license:</span> {license}
            </li>
          )
        }
      </ul>
      {
        contributors && (
          <div>
            <h2 class="font-bold lowercase">contributors:</h2>
            <ul class="grid grid-rows-3 gap-x-4 overflow-hidden">
              {contributors.map((contributor) => (
                <li class="truncate">
                  -{' '}
                  <a
                    href={contributor.profile_url}
                    class="underline decoration-orange-600 hover:bg-orange-600 hover:text-stone-800"
                  >
                    {contributor.name}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        )
      }
    </section>
    <section class="flex flex-col xl:flex-row xl:gap-6">
      <div>
        <h2 class="text-2xl font-bold lowercase underline">about</h2>
        <ProseWrapper>
          <Content />
        </ProseWrapper>
      </div>
      {
        posts && posts.length > 0 && (
          <div class="min-w-fit">
            <h2 class="pb-5 text-2xl font-bold lowercase underline">
              related posts
            </h2>
            <PostList posts={posts.slice(0, maxPosts)} />
            {posts.length > maxPosts &&
              associated_tags &&
              associated_tags.length > 0 && (
                <div class="mt-4">
                  <a
                    href={`/blog/tags/${associated_tags[0]}`}
                    class="underline decoration-orange-600 decoration-2 hover:bg-orange-600 hover:text-stone-800"
                  >
                    more posts
                  </a>
                </div>
              )}
          </div>
        )
      }
    </section>
  </main>
</BaseLayout>
